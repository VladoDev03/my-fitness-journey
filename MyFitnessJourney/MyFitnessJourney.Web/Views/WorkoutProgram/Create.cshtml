@using MyFitnessJourney.Web.Models.WorkoutProgram
@model WorkoutProgramViewModel

@{
    ViewData["Title"] = "Create Training Program";
    string exercisesJson = System.Text.Json.JsonSerializer.Serialize(Model.Exercises.Select(x => new { id = x.Id, name = x.CapitalizedName }).ToList());
}

<style>
    /* Основен контейнер за всеки ден */
    .day-block {
        border: 1px solid #ccc;
        padding: 15px 20px;
        margin-bottom: 20px;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

        /* Заглавие на деня */
        .day-block h3 {
            margin-top: 0;
            margin-bottom: 15px;
            font-weight: 600;
            color: #333;
        }

    /* Контейнер за упражнения */
    .exercisesContainer {
        margin-bottom: 10px;
    }

    /* Ред за упражнение */
    .exercise-row {
        display: flex;
        align-items: center;
        margin-bottom: 12px;
    }

        /* Dropdown и input полета - малко по-широки и с margin */
        .exercise-row select,
        .exercise-row input[type="number"] {
            padding: 6px 8px;
            font-size: 14px;
            border: 1px solid #bbb;
            border-radius: 4px;
            margin-right: 10px;
            min-width: 140px;
            box-sizing: border-box;
        }

        /* Ширина на числовите полета за серии и повторения */
        .exercise-row input[name*="Sets"],
        .exercise-row input[name*="RepsMin"],
        .exercise-row input[name*="RepsMax"] {
            width: 75px;
        }

    /* Бутон за премахване упражнение - малко червено и отделен */
    .removeExerciseBtn {
        background: none;
        border: none;
        color: #d9534f;
        cursor: pointer;
        font-weight: 600;
        padding: 4px 8px;
        transition: color 0.2s ease;
    }

        .removeExerciseBtn:hover {
            color: #c12e2a;
        }

    /* Бутоните за добавяне упражнения и дни */
    .addExerciseBtn,
    .removeDayBtn,
    #addDayBtn {
        padding: 8px 14px;
        font-size: 14px;
        border: 1px solid #007bff;
        background-color: #007bff;
        color: white;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 10px;
    }

    .removeDayBtn {
        background-color: #d9534f;
        border-color: #d43f3a;
        margin-left: 10px;
    }

    .addExerciseBtn:hover,
    #addDayBtn:hover {
        background-color: #0056b3;
        border-color: #004085;
    }

    .removeDayBtn:hover {
        background-color: #c12e2a;
        border-color: #a71d2a;
    }

    /* Подравняване на бутоните вътре в деня */
    .day-block > button {
        margin-top: 10px;
    }

    /* Малко разстояние между бутоните за добавяне и премахване дни */
    .addExerciseBtn + .removeDayBtn {
        margin-left: 10px;
    }
</style>

<h2>@ViewData["Title"]</h2>

<div id="exercisesData" data-exercises='@exercisesJson'></div>

<form asp-action="Create" method="post" id="trainingForm">
    <div id="daysContainer">
        <div class="day-block" data-day-index="0">
            <h3>Day 1</h3>
            <input type="hidden" name="Program.Days[0].DayName" value="Day 1" />

            <div class="exercisesContainer">
                <div class="exercise-row">
                    <select class="exerciseSelect" name="Program.Days[0].Exercises[0].Name" required>
                        <option value="">-- Select Exercise --</option>
                        @foreach (var exercise in Model.Exercises)
                        {
                            <option value="@exercise.CapitalizedName" data-id="@exercise.Id">@exercise.CapitalizedName</option>
                        }
                    </select>

                    <input type="hidden" name="Program.Days[0].Exercises[0].ExerciseId" value="" class="exerciseIdInput" />

                    <input type="number" name="Program.Days[0].Exercises[0].Sets" min="1" placeholder="Sets" required />
                    <input type="number" name="Program.Days[0].Exercises[0].RepsMin" min="1" placeholder="Min Reps" required />
                    <input type="number" name="Program.Days[0].Exercises[0].RepsMax" min="1" placeholder="Max Reps" required />

                    <button type="button" class="removeExerciseBtn">Remove Exercise</button>
                </div>
            </div>

            <button type="button" class="addExerciseBtn">Add Exercise</button>
            <button type="button" class="removeDayBtn">Remove Day</button>
        </div>
    </div>

    <button type="button" id="addDayBtn">Add Day</button>

    <br /><br />
    <button class="btn btn-success" type="submit">Save Program</button>
</form>

@section Scripts {
    <script>
        (function () {
            const maxDays = 7;
            let dayIndex = 1;

            const exercisesDataDiv = document.getElementById('exercisesData');
            const exercises = JSON.parse(exercisesDataDiv.dataset.exercises);

            const daysContainer = document.getElementById('daysContainer');
            const addDayBtn = document.getElementById('addDayBtn');

            function updateExerciseIds() {
                const selects = document.querySelectorAll('.exerciseSelect');
                selects.forEach(select => {
                    const selectedOption = select.options[select.selectedIndex];
                    const exerciseIdInput = select.closest('.exercise-row').querySelector('.exerciseIdInput');
                    exerciseIdInput.value = selectedOption?.dataset.id || '';
                });
            }

            function addExercise(dayBlock, dayIdx) {
                const exercisesContainer = dayBlock.querySelector('.exercisesContainer');
                const exerciseCount = exercisesContainer.querySelectorAll('.exercise-row').length;

                const div = document.createElement('div');
                div.classList.add('exercise-row');

                const select = document.createElement('select');
                select.classList.add('exerciseSelect');
                select.name = `Program.Days[${dayIdx}].Exercises[${exerciseCount}].Name`;
                select.required = true;

                const defaultOption = document.createElement('option');
                defaultOption.value = "";
                defaultOption.text = "-- Select Exercise --";
                select.appendChild(defaultOption);

                exercises.forEach(ex => {
                    const option = document.createElement('option');
                    option.value = ex.name;
                    option.text = ex.name;
                    option.dataset.id = ex.id;
                    select.appendChild(option);
                });

                const exerciseIdInput = document.createElement('input');
                exerciseIdInput.type = 'hidden';
                exerciseIdInput.name = `Program.Days[${dayIdx}].Exercises[${exerciseCount}].ExerciseId`;
                exerciseIdInput.classList.add('exerciseIdInput');
                exerciseIdInput.value = "";

                const setsInput = document.createElement('input');
                setsInput.type = 'number';
                setsInput.name = `Program.Days[${dayIdx}].Exercises[${exerciseCount}].Sets`;
                setsInput.min = 1;
                setsInput.placeholder = 'Sets';
                setsInput.required = true;

                const repsMinInput = document.createElement('input');
                repsMinInput.type = 'number';
                repsMinInput.name = `Program.Days[${dayIdx}].Exercises[${exerciseCount}].RepsMin`;
                repsMinInput.min = 1;
                repsMinInput.placeholder = 'Min Reps';
                repsMinInput.required = true;

                const repsMaxInput = document.createElement('input');
                repsMaxInput.type = 'number';
                repsMaxInput.name = `Program.Days[${dayIdx}].Exercises[${exerciseCount}].RepsMax`;
                repsMaxInput.min = 1;
                repsMaxInput.placeholder = 'Max Reps';
                repsMaxInput.required = true;

                const removeExerciseBtn = document.createElement('button');
                removeExerciseBtn.type = 'button';
                removeExerciseBtn.classList.add('removeExerciseBtn');
                removeExerciseBtn.textContent = 'Remove Exercise';
                removeExerciseBtn.addEventListener('click', () => div.remove());

                select.addEventListener('change', updateExerciseIds);

                div.appendChild(select);
                div.appendChild(exerciseIdInput);
                div.appendChild(setsInput);
                div.appendChild(repsMinInput);
                div.appendChild(repsMaxInput);
                div.appendChild(removeExerciseBtn);

                // Добавяме margin и ширина през JS, за да е по-добре подредено
                [setsInput, repsMinInput, repsMaxInput].forEach(input => {
                    input.style.width = '75px';
                });

                exercisesContainer.appendChild(div);
            }

            addDayBtn.addEventListener('click', () => {
                if (dayIndex >= maxDays) {
                    alert(`Максимум ${maxDays} дни са позволени.`);
                    return;
                }

                const dayBlock = document.createElement('div');
                dayBlock.classList.add('day-block');
                dayBlock.dataset.dayIndex = dayIndex;

                const h3 = document.createElement('h3');
                h3.textContent = `Day ${dayIndex + 1}`;

                const dayNameInput = document.createElement('input');
                dayNameInput.type = 'hidden';
                dayNameInput.name = `Program.Days[${dayIndex}].DayName`;
                dayNameInput.value = `Day ${dayIndex + 1}`;

                const exercisesContainer = document.createElement('div');
                exercisesContainer.classList.add('exercisesContainer');

                dayBlock.appendChild(h3);
                dayBlock.appendChild(dayNameInput);
                dayBlock.appendChild(exercisesContainer);

                // Добавяме първото упражнение
                addExercise(dayBlock, dayIndex);

                // Add Exercise бутон
                const addExerciseBtn = document.createElement('button');
                addExerciseBtn.type = 'button';
                addExerciseBtn.classList.add('addExerciseBtn');
                addExerciseBtn.textContent = 'Add Exercise';
                addExerciseBtn.addEventListener('click', () => addExercise(dayBlock, dayIndex));

                // Remove Day бутон
                const removeDayBtn = document.createElement('button');
                removeDayBtn.type = 'button';
                removeDayBtn.classList.add('removeDayBtn');
                removeDayBtn.textContent = 'Remove Day';
                removeDayBtn.addEventListener('click', () => {
                    dayBlock.remove();
                    updateAllDayIndices();
                    dayIndex--;
                });

                dayBlock.appendChild(addExerciseBtn);
                dayBlock.appendChild(removeDayBtn);

                daysContainer.appendChild(dayBlock);

                dayIndex++;
            });

            // Премахване упражнение за вече съществуващите бутони
            document.querySelectorAll('.removeExerciseBtn').forEach(btn => {
                btn.addEventListener('click', e => {
                    e.target.closest('.exercise-row').remove();
                });
            });

            // Добавяне упражнение за вече съществуващите бутони
            document.querySelectorAll('.addExerciseBtn').forEach(btn => {
                btn.addEventListener('click', e => {
                    const dayBlock = e.target.closest('.day-block');
                    const dayIdx = parseInt(dayBlock.dataset.dayIndex);
                    addExercise(dayBlock, dayIdx);
                });
            });

            // Премахване ден за вече съществуващите бутони
            document.querySelectorAll('.removeDayBtn').forEach(btn => {
                btn.addEventListener('click', e => {
                    e.target.closest('.day-block').remove();
                    updateAllDayIndices();
                    dayIndex--;
                });
            });

            // Обновяване на индексите на дните и упражнението в тях (за коректни имена на input)
            function updateAllDayIndices() {
                const dayBlocks = document.querySelectorAll('.day-block');
                dayBlocks.forEach((dayBlock, index) => {
                    dayBlock.dataset.dayIndex = index;
                    dayBlock.querySelector('h3').textContent = `Day ${index + 1}`;
                    dayBlock.querySelector('input[type="hidden"][name*="DayName"]').name = `Program.Days[${index}].DayName`;
                    dayBlock.querySelector('input[type="hidden"][name*="DayName"]').value = `Day ${index + 1}`;

                    const exercises = dayBlock.querySelectorAll('.exercise-row');
                    exercises.forEach((exerciseRow, eIdx) => {
                        const select = exerciseRow.querySelector('select.exerciseSelect');
                        select.name = `Program.Days[${index}].Exercises[${eIdx}].Name`;

                        const exerciseIdInput = exerciseRow.querySelector('input.exerciseIdInput[type="hidden"]');
                        exerciseIdInput.name = `Program.Days[${index}].Exercises[${eIdx}].ExerciseId`;

                        const setsInput = exerciseRow.querySelector('input[name*="Sets"]');
                        setsInput.name = `Program.Days[${index}].Exercises[${eIdx}].Sets`;

                        const repsMinInput = exerciseRow.querySelector('input[name*="RepsMin"]');
                        repsMinInput.name = `Program.Days[${index}].Exercises[${eIdx}].RepsMin`;

                        const repsMaxInput = exerciseRow.querySelector('input[name*="RepsMax"]');
                        repsMaxInput.name = `Program.Days[${index}].Exercises[${eIdx}].RepsMax`;
                    });
                });
            }

            document.querySelectorAll('.exerciseSelect').forEach(select => {
                select.addEventListener('change', updateExerciseIds);
            });

            updateExerciseIds();
        })();
    </script>
}
